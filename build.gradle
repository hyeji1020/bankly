plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// Spring Web: HTTP 요청 및 응답 처리를 위한 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.hibernate.validator:hibernate-validator:7.0.2.Final'
    implementation 'org.testng:testng:7.1.0'

    compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'mysql:mysql-connector-java:8.0.32'

	testImplementation 'com.h2database:h2'

	// Yauaa: User-Agent 분석을 위한 라이브러리
	implementation 'nl.basjes.parse.useragent:yauaa:5.21'

	// RabbitMQ 사용을 위한 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-amqp'

	implementation "org.springframework.boot:spring-boot-starter-cache"
	implementation "org.springframework.boot:spring-boot-starter-data-redis"

}

tasks.named('test') {
	useJUnitPlatform()
}
